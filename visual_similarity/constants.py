# -*- coding: utf-8 -*-
"""
Created on Mon Nov 28 04:09:42 2016

@author: chenym
"""
from numpy import array

#xyz_dodecahedron = np.zeros((20,3))
#xyz_dodecahedron[0:8,:] = np.array([\
#[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],\
#[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]]) # (+/- 1,+/- 1,+/- 1)
#
#phi = (1+5**0.5)/2.0 # golden ration
#temp = np.array([[1/phi,phi],[1/phi,-phi],[-1/phi,phi],[-1/phi,-phi]])
#xyz_dodecahedron[8:12,1:3] = temp # (0,+/- 1/phi, +/- phi)
#xyz_dodecahedron[12:16,0:2] = temp # (+/- 1/phi, +/- phi, 0)
#xyz_dodecahedron[16:20,[2,0]] = temp # (+/- phi, 0, +/- 1/phi)
#azimuthal_polar_dodecahedron = np.zeros((20,2))
#azimuthal_polar_dodecahedron[:,0] = np.arctan(xyz_dodecahedron[:,1]/xyz_dodecahedron[:,0])
#azimuthal_polar_dodecahedron[:,1] = np.arccos(xyz_dodecahedron[:,2]/(3**0.5))

#XYZ_DODECAHEDRON = \
#np.array([[ 1.        ,  1.        ,  1.        ],
#          [ 1.        ,  1.        , -1.        ],
#          [ 1.        , -1.        ,  1.        ],
#          [ 1.        , -1.        , -1.        ],
#          [-1.        ,  1.        ,  1.        ],
#          [-1.        ,  1.        , -1.        ],
#          [-1.        , -1.        ,  1.        ],
#          [-1.        , -1.        , -1.        ],
#          [ 0.        ,  0.61803399,  1.61803399],
#          [ 0.        ,  0.61803399, -1.61803399],
#          [ 0.        , -0.61803399,  1.61803399],
#          [ 0.        , -0.61803399, -1.61803399],
#          [ 0.61803399,  1.61803399,  0.        ],
#          [ 0.61803399, -1.61803399,  0.        ],
#          [-0.61803399,  1.61803399,  0.        ],
#          [-0.61803399, -1.61803399,  0.        ],
#          [ 1.61803399,  0.        ,  0.61803399],
#          [-1.61803399,  0.        ,  0.61803399],
#          [ 1.61803399,  0.        , -0.61803399],
#          [-1.61803399,  0.        , -0.61803399]])
#   
XYZ_DODECAHEDRON_HALF = \
array([[ 1.        ,  1.        ,  1.        ],
       [ 1.        ,  1.        , -1.        ],
       [ 1.        , -1.        ,  1.        ],
       [ 1.        , -1.        , -1.        ],
       [ 0.        ,  0.61803399,  1.61803399],
       [ 0.        ,  0.61803399, -1.61803399],
       [ 0.61803399,  1.61803399,  0.        ],
       [ 0.61803399, -1.61803399,  0.        ],
       [ 1.61803399,  0.        ,  0.61803399],
       [-1.61803399,  0.        ,  0.61803399]])
#
#      
#AZIMUTHAL_POLAR_DODECAHEDRON = \
#np.array([[ 0.78539816,  0.95531662],
#          [ 0.78539816,  2.18627604],
#          [-0.78539816,  0.95531662],
#          [-0.78539816,  2.18627604],
#          [-0.78539816,  0.95531662],
#          [-0.78539816,  2.18627604],
#          [ 0.78539816,  0.95531662],
#          [ 0.78539816,  2.18627604],
#          [ 1.57079633,  0.36486383],
#          [ 1.57079633,  2.77672883],
#          [-1.57079633,  0.36486383],
#          [-1.57079633,  2.77672883],
#          [ 1.2059325 ,  1.57079633],
#          [-1.2059325 ,  1.57079633],
#          [-1.2059325 ,  1.57079633],
#          [ 1.2059325 ,  1.57079633],
#          [ 0.        ,  1.2059325 ],
#          [ 3.14159265,  1.2059325 ],
#          [ 0.        ,  1.93566015],
#          [ 3.14159265,  1.93566015]])
#          
AZIMUTHAL_POLAR_DODECAHEDRON_HALF = \
array([[ 0.78539816,  0.95531662],
       [ 0.78539816,  2.18627604],
       [-0.78539816,  0.95531662],
       [-0.78539816,  2.18627604],
       [ 1.57079633,  0.36486383],
       [ 1.57079633,  2.77672883],
       [ 1.2059325 ,  1.57079633],
       [-1.2059325 ,  1.57079633],
       [ 0.        ,  1.2059325 ],
       [ 3.14159265,  1.2059325 ]])

PERMUTATION_DODECAHEDRON_HALF = \
array([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
       [2, 9, 6, 4, 5, 1, 8, 0, 7, 3],
       [6, 3, 8, 5, 1, 9, 7, 2, 0, 4],
       [8, 4, 7, 1, 9, 3, 0, 6, 2, 5],
       [7, 5, 0, 9, 3, 4, 2, 8, 6, 1],
       [9, 5, 7, 0, 8, 2, 1, 6, 3, 4],
       [4, 2, 6, 9, 3, 7, 5, 1, 0, 8],
       [8, 7, 1, 4, 0, 6, 2, 5, 9, 3],
       [3, 6, 5, 8, 9, 1, 7, 2, 4, 0],
       [8, 6, 3, 5, 2, 7, 0, 4, 9, 1],
       [9, 0, 5, 7, 3, 4, 8, 2, 1, 6],
       [1, 8, 7, 4, 5, 2, 9, 3, 6, 0],
       [6, 9, 4, 2, 7, 3, 1, 5, 0, 8],
       [6, 2, 9, 4, 0, 8, 7, 3, 1, 5],
       [7, 9, 5, 0, 6, 1, 3, 4, 2, 8],
       [3, 5, 8, 6, 7, 2, 4, 0, 9, 1],
       [4, 8, 1, 7, 3, 9, 0, 6, 5, 2],
       [4, 7, 8, 1, 5, 2, 3, 9, 0, 6],
       [5, 9, 0, 7, 2, 8, 1, 6, 4, 3],
       [2, 6, 4, 9, 8, 0, 7, 3, 5, 1],
       [8, 3, 5, 6, 0, 4, 9, 1, 2, 7],
       [5, 0, 7, 9, 1, 6, 4, 3, 2, 8],
       [6, 5, 3, 8, 0, 4, 1, 9, 7, 2],
       [4, 6, 9, 2, 5, 1, 0, 8, 3, 7],
       [1, 4, 8, 7, 6, 0, 5, 2, 9, 3],
       [7, 1, 8, 4, 3, 9, 6, 0, 2, 5],
       [4, 9, 2, 6, 0, 8, 3, 7, 5, 1],
       [0, 7, 5, 9, 8, 2, 6, 1, 4, 3],
       [2, 3, 0, 1, 5, 4, 7, 6, 8, 9],
       [8, 5, 6, 3, 9, 1, 2, 7, 0, 4],
       [6, 8, 5, 3, 7, 2, 0, 4, 1, 9],
       [9, 6, 2, 4, 3, 7, 1, 5, 8, 0],
       [3, 2, 1, 0, 4, 5, 7, 6, 9, 8],
       [4, 1, 7, 8, 0, 6, 5, 2, 3, 9],
       [0, 5, 9, 7, 6, 1, 4, 3, 8, 2],
       [8, 1, 4, 7, 2, 5, 9, 3, 0, 6],
       [5, 6, 8, 3, 4, 0, 1, 9, 2, 7],
       [0, 9, 7, 5, 4, 3, 8, 2, 6, 1],
       [6, 4, 2, 9, 1, 5, 0, 8, 7, 3],
       [1, 0, 3, 2, 5, 4, 6, 7, 9, 8],
       [0, 2, 3, 1, 6, 7, 8, 9, 4, 5],
       [0, 3, 1, 2, 8, 9, 4, 5, 6, 7],
       [2, 1, 3, 0, 8, 9, 5, 4, 7, 6],
       [3, 1, 0, 2, 7, 6, 9, 8, 4, 5],
       [3, 0, 2, 1, 9, 8, 4, 5, 7, 6],
       [1, 3, 2, 0, 6, 7, 9, 8, 5, 4],
       [2, 0, 1, 3, 7, 6, 8, 9, 5, 4],
       [1, 2, 0, 3, 9, 8, 5, 4, 6, 7],
       [5, 7, 9, 0, 4, 3, 2, 8, 1, 6],
       [3, 8, 6, 5, 4, 0, 9, 1, 7, 2],
       [9, 2, 4, 6, 1, 5, 8, 0, 3, 7],
       [7, 4, 1, 8, 2, 5, 3, 9, 6, 0],
       [7, 0, 9, 5, 2, 8, 6, 1, 3, 4],
       [1, 7, 4, 8, 9, 3, 6, 0, 5, 2],
       [5, 8, 3, 6, 1, 9, 2, 7, 4, 0],
       [9, 4, 6, 2, 8, 0, 3, 7, 1, 5],
       [9, 7, 0, 5, 1, 6, 3, 4, 8, 2],
       [2, 4, 9, 6, 7, 3, 5, 1, 8, 0],
       [7, 8, 4, 1, 6, 0, 2, 5, 3, 9],
       [5, 3, 6, 8, 2, 7, 4, 0, 1, 9]]);

AZIMUTHAL_POLAR_DODECAHEDRON_ROTATION_SET = \
array([[[  7.85398163e-01,   9.55316618e-01],
        [  7.85398163e-01,   2.18627604e+00],
        [ -7.85398163e-01,   9.55316618e-01],
        [ -7.85398163e-01,   2.18627604e+00],
        [  1.57079633e+00,   3.64863829e-01],
        [  1.57079633e+00,   2.77672883e+00],
        [  1.20593250e+00,   1.57079633e+00],
        [ -1.20593250e+00,   1.57079633e+00],
        [  0.00000000e+00,   1.20593250e+00],
        [  3.14159265e+00,   1.20593250e+00]],

       [[  4.04350340e-01,   1.14020072e+00],
        [  7.80875661e-04,   2.31350257e+00],
        [ -1.14896895e+00,   6.84864795e-01],
        [ -1.40094292e+00,   1.89567251e+00],
        [  1.15061312e+00,   6.84917828e-01],
        [  5.13138299e-04,   3.04323022e+00],
        [  6.41390974e-01,   1.83230893e+00],
        [ -1.73903793e+00,   1.24586287e+00],
        [ -4.02710696e-01,   1.14017791e+00],
        [  2.50180431e+00,   1.30931845e+00]],

       [[  1.07012694e+00,   1.11645751e+00],
        [  3.17821319e-01,   2.11600929e+00],
        [ -7.39535707e-01,   3.67072942e-01],
        [ -8.68194962e-01,   1.59488533e+00],
        [  1.90485149e+00,   8.99763506e-01],
        [ -2.79629305e-01,   2.75825474e+00],
        [  1.06368756e+00,   1.84615827e+00],
        [ -1.33486629e+00,   1.01426470e+00],
        [  2.36265718e-01,   8.87388211e-01],
        [  3.00047939e+00,   1.61049811e+00]],

       [[ -2.29602412e-01,   9.20546009e-01],
        [ -2.60123407e-01,   2.15117661e+00],
        [ -1.84187844e+00,   9.34209532e-01],
        [ -1.79245284e+00,   2.16430538e+00],
        [  6.46776890e-01,   3.57532330e-01],
        [  4.38290510e-01,   2.76522900e+00],
        [  1.75309743e-01,   1.54770111e+00],
        [ -2.23705728e+00,   1.56539053e+00],
        [ -1.03488196e+00,   1.16600490e+00],
        [  2.11395595e+00,   1.24589439e+00]],

       [[  5.87836830e-01,   8.56094072e-01],
        [ -2.81388736e-01,   1.78994910e+00],
        [ -2.21507825e+00,   3.92207083e-01],
        [ -1.49099680e+00,   1.51950143e+00],
        [  1.55158466e+00,   8.98120614e-01],
        [ -5.75458804e-01,   2.48018991e+00],
        [  4.20157232e-01,   1.56978760e+00],
        [ -2.12722844e+00,   1.11994246e+00],
        [ -4.87917823e-01,   5.70904476e-01],
        [  2.34781993e+00,   1.87758141e+00]],

       [[  6.74431614e-01,   1.28068339e+00],
        [ -3.55161768e-01,   1.99243686e+00],
        [ -2.37719307e-01,   8.23519414e-02],
        [ -1.37340622e+00,   1.26474827e+00],
        [  1.44273777e+00,   1.22073850e+00],
        [ -1.08097104e+00,   2.46881942e+00],
        [  4.44953944e-01,   1.97506378e+00],
        [ -1.96582848e+00,   7.13081624e-01],
        [  1.46300960e-02,   8.09246700e-01],
        [  2.52881775e+00,   1.83414321e+00]],

       [[  9.43838032e-01,   1.01968059e+00],
        [  5.79558932e-01,   2.20235171e+00],
        [ -7.54850091e-01,   6.93243485e-01],
        [ -8.19154785e-01,   1.92288764e+00],
        [  1.80562598e+00,   5.99884849e-01],
        [  7.69932749e-01,   2.92741844e+00],
        [  1.17635832e+00,   1.71469286e+00],
        [ -1.22842996e+00,   1.31409596e+00],
        [  9.18049547e-02,   1.05997922e+00],
        [  3.06678284e+00,   1.36982243e+00]],

       [[  1.18236404e+00,   1.01186753e+00],
        [  2.29566151e-01,   1.83870993e+00],
        [ -1.69746234e+00,   2.25946439e-01],
        [ -9.28086780e-01,   1.39023260e+00],
        [  2.04245431e+00,   1.04040652e+00],
        [ -2.35914897e-01,   2.46620513e+00],
        [  9.64629299e-01,   1.71134872e+00],
        [ -1.57232202e+00,   9.53528644e-01],
        [  3.05929435e-01,   6.09457281e-01],
        [  2.95314762e+00,   1.90564135e+00]],

       [[  7.49700427e-01,   1.09802728e+00],
        [  1.81532778e-01,   2.20667498e+00],
        [ -9.47442420e-01,   5.38627632e-01],
        [ -1.10695808e+00,   1.76279839e+00],
        [  1.57690003e+00,   7.60779245e-01],
        [ -2.52013736e-01,   2.91044364e+00],
        [  8.74450523e-01,   1.81763388e+00],
        [ -1.51363955e+00,   1.15072413e+00],
        [ -9.13046374e-02,   1.00244812e+00],
        [  2.76877727e+00,   1.46034782e+00]],

       [[  2.21070860e-01,   1.14927361e+00],
        [ -3.17958445e-01,   2.27326858e+00],
        [ -1.36819329e+00,   5.78619325e-01],
        [ -1.62741792e+00,   1.79060045e+00],
        [  9.98864878e-01,   7.64916070e-01],
        [ -8.70964691e-01,   2.97407166e+00],
        [  3.80773013e-01,   1.86215884e+00],
        [ -1.99129620e+00,   1.15341145e+00],
        [ -5.94111024e-01,   1.06933769e+00],
        [  2.25734519e+00,   1.39846504e+00]]])
#import scipy.io as sio
#_dodecahegrondata = sio.loadmat('res/Matlab/dodecahegron_halfdata.mat')
#XYZ_DODECAHEDRON_HALF = _dodecahegrondata['vertices_half']
#AZIMUTHAL_POLAR_DODECAHEDRON_HALF = _dodecahegrondata['vertices_sph_half']
#AZIMUTHAL_POLAR_DODECAHEDRON_HALF[:,1] = np.pi/2 - AZIMUTHAL_POLAR_DODECAHEDRON_HALF[:,1]
#PERMUTATION_DODECAHEDRON_HALF = _dodecahegrondata['permutation_half'].T-1
#import scipy.io as sio
#_dodecahegrondata = sio.loadmat('res/Matlab/setdata.mat')
#AZIMUTHAL_POLAR_DODECAHEDRON_ROTATION_SET = _dodecahegrondata['dodeset_half_az_el']
#AZIMUTHAL_POLAR_DODECAHEDRON_ROTATION_SET[:,:,1] = np.pi/2 - \
#AZIMUTHAL_POLAR_DODECAHEDRON_ROTATION_SET[:,:,1]